service: lambda-starter

plugins:
  - serverless-webpack
  - serverless-domain-manager
  # - serverless-plugin-warmup # keeps your lambdas "warm"
  - serverless-offline # adds ability to run your service locally 

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true
    packager: 'npm'

  customDomain:
    certificateName: ${file(./serverless.env.yml):${self:provider.stage}.CERTIFICATE_NAME}
    domainName: ${file(./serverless.env.yml):${self:provider.stage}.DOMAIN_NAME}
    basePath: 'example'
    stage: ${self:provider.stage}
    createRoute53Record: true

provider:
  name: aws
  runtime: nodejs10.x
  stage: ${opt:stage, 'dev'}
  region: ${file(./serverless.env.yml):${self:provider.stage}.AWS_REGION}

  profile: ${file(./serverless.env.yml):${self:provider.stage}.SERVERLESS_ADMIN}
  timeout: 30
  environment:
    REGION: ${self:provider.region}
    STAGE: ${self:provider.stage}
    DYNAMO_EXAMPLE_TABLE: ${file(./serverless.env.yml):${self:provider.stage}.DYNAMO_EXAMPLE_TABLE}
    JWT_SECRET: ${file(./serverless.env.yml):${self:provider.stage}.JWT_SECRET}
  iamRoleStatements: # permissions for what each lambda function can do or interact with, the example below is giving our lambda functions permission to use the example table
      - Effect: Allow
        Action:
          - dynamodb:Query
          - dynamodb:Scan
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:UpdateItem
        Resource: 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMO_EXAMPLE_TABLE}*'

functions:
  exampleFunction:
    handler: functions/exampleFunction.main
    events:
      - http:
          path: /
          method: get
          cors: true
  createUserExample:
    handler: functions/createUserExample.main
    events:
      - http:
          path: /user
          method: put
          cors: true
  getUserExample:
    handler: functions/getUserExample.main
    events:
      - http:
          path: /user/{userId}
          method: get
          cors: true
